node {
    try {
        stage('Build') {
            docker.image('node:14').inside {
                sh 'npm install'
            }
        }

        stage('Test') {
            docker.image('node:14').inside {
                sh './jenkins/scripts/test.sh'
            }
        }

        stage('Deliver') {
            docker.image('node:14').inside {
                sh './jenkins/scripts/deliver.sh'
                input message: 'Finished using the website? (Click "Proceed" to continue)'
                sh './jenkins/scripts/kill.sh'
            }
        }

        stage('Deploy') {
            // Menggunakan Docker builder yang ada pada Jenkins
            // Dengan Dockerfile node:14 yang ditambahkan dan berada di repo fork
            // Menggunakan GHCR yang dapat langsung di pull ke prod
            // Kredensial Github (username dan token PAT) untuk GHCR menggunkan Jenkins variable
            withEnv([
                "CI=true",
                "IMAGE_NAME=ghcr.io/arduinocraft/a428-cicd-labs:latest"
            ]) {
                withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''
                    docker build -t $IMAGE_NAME .
                    '''
                    
                    // Menggunakan fitur env variable Jenkins untuk mengingat Container ID agar tidak hilang di script berikutnya
                    script {
                        env.CONTAINER_ID = sh(
                            script: 'docker run -d -p 3000:3000 $IMAGE_NAME',
                            returnStdout: true
                        ).trim()
                    }
                    
                    // (Revisi) Menggunakan sleep Jenkins daripada script sh sleep langsung di container
                    sleep time: 1, unit: 'MINUTES' 
                    
                    sh '''
                    docker stop $CONTAINER_ID
                    docker rm $CONTAINER_ID
                    '''

                    input message: 'Lanjutkan ke tahap Deploy? (Click "Proceed" to continue)'

                    sh '''
                    echo $PASSWORD | docker login ghcr.io -u $USERNAME --password-stdin
                    docker push $IMAGE_NAME
                    '''
                }
            }
        }
    } catch (Exception e) {
        currentBuild.result = 'FAILURE'
        throw e
    }
}
